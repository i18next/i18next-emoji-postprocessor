{
  "name": "i18next-emoji-postprocessor",
  "version": "1.0.2",
  "private": false,
  "type": "module",
  "main": "./cjs/index.js",
  "exports": {
    "./package.json": "./package.json",
    ".": {
      "require": "./cjs/index.js",
      "default": "./lib/index.js"
    },
    "./cjs": {
      "default": "./cjs/index.js"
    }
  },
  "module": "./lib/index.js",
  "dependencies": {
    "emoji-from-word": "1.2.12"
  },
  "devDependencies": {
    "@babel/cli": "7.23.0",
    "@babel/core": "7.23.3",
    "@babel/preset-env": "7.23.3",
    "babel-plugin-add-module-exports": "1.0.4",
    "browserify": "17.0.0",
    "eslint": "8.57.1",
    "eslint-config-standard": "17.1.0",
    "eslint-plugin-import": "2.31.0",
    "eslint-plugin-n": "16.6.2",
    "eslint-plugin-promise": "6.6.0",
    "eslint-plugin-require-path-exists": "1.1.9",
    "eslint-plugin-standard": "5.0.0",
    "expect.js": "0.3.1",
    "i18next": "24.2.1",
    "mocha": "10.8.2",
    "uglify-js": "3.17.4"
  },
  "description": "i18next-emoji-postprocessor is a postProcessor plugin for i18next using in Node.js and in the browser that replaces all words with emojis.",
  "keywords": [
    "i18next",
    "plugin",
    "postprocess",
    "postprocessor"
  ],
  "homepage": "https://github.com/i18next/i18next-emoji-postprocessor",
  "repository": {
    "type": "git",
    "url": "git@github.com:i18next/i18next-emoji-postprocessor.git"
  },
  "bugs": {
    "url": "https://github.com/i18next/i18next-emoji-postprocessor/issues"
  },
  "license": "MIT",
  "scripts": {
    "lint": "eslint .",
    "compile": "rm -rf cjs && mkdir cjs && babel lib -d cjs --presets=@babel/preset-env --plugins=add-module-exports && echo '{\"type\":\"commonjs\"}' > cjs/package.json",
    "browser": "browserify --standalone i18nextEmojiPostProcessor cjs/index.js -o i18nextEmojiPostProcessor.js && uglifyjs i18nextEmojiPostProcessor.js --compress --mangle -o i18nextEmojiPostProcessor.min.js",
    "build": "npm run compile && npm run browser",
    "test": "mocha test -R spec --exit --experimental-modules",
    "preversion": "npm run test && npm run build && git push",
    "postversion": "git push && git push --tags"
  }
}
